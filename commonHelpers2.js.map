{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const form = document.querySelector('.feedback-form');\n\nconst localStorageKey = 'feedback-form-state';\nlet inputTarget = form.elements;\nconst localStorageValue = {\n    email: null,\n    message: null\n};\n\n/* fill the local storage key \"localStorageKey\"  */\nform.addEventListener('input', () => {\n    localStorageValue.email = inputTarget.email.value.trim();\n    localStorageValue.message = inputTarget.message.value.trim();\n    localStorage.setItem(localStorageKey, JSON.stringify(localStorageValue));\n});\n\n/* fill the input fields if the local storage isn't empty */\nfunction checkTheStorage() {\n    let savedValues = JSON.parse(localStorage.getItem(localStorageKey));\n    if (savedValues != null) {\n        inputTarget.email.value = savedValues.email ?? \"\";\n        inputTarget.message.value = savedValues.message ?? \"\";\n    }\n}\n\ncheckTheStorage();\n/* form submiting in case if the inputs aren't empty */\nform.addEventListener('submit', (e) => {\n    e.preventDefault();\n    if ((localStorageValue.email != '' && localStorageValue.message != '')) {\n        console.log(localStorageValue);\n\n        localStorage.removeItem(localStorageKey);\n        form.reset();\n    }\n});\n\n\n\n\n"],"names":["form","localStorageKey","inputTarget","localStorageValue","checkTheStorage","savedValues","e"],"mappings":"wFAAA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAE9CC,EAAkB,sBACxB,IAAIC,EAAcF,EAAK,SACvB,MAAMG,EAAoB,CACtB,MAAO,KACP,QAAS,IACb,EAGAH,EAAK,iBAAiB,QAAS,IAAM,CACjCG,EAAkB,MAAQD,EAAY,MAAM,MAAM,KAAI,EACtDC,EAAkB,QAAUD,EAAY,QAAQ,MAAM,KAAI,EAC1D,aAAa,QAAQD,EAAiB,KAAK,UAAUE,CAAiB,CAAC,CAC3E,CAAC,EAGD,SAASC,GAAkB,CACvB,IAAIC,EAAc,KAAK,MAAM,aAAa,QAAQJ,CAAe,CAAC,EAC9DI,GAAe,OACfH,EAAY,MAAM,MAAQG,EAAY,OAAS,GAC/CH,EAAY,QAAQ,MAAQG,EAAY,SAAW,GAE3D,CAEAD,IAEAJ,EAAK,iBAAiB,SAAWM,GAAM,CACnCA,EAAE,eAAc,EACXH,EAAkB,OAAS,IAAMA,EAAkB,SAAW,KAC/D,QAAQ,IAAIA,CAAiB,EAE7B,aAAa,WAAWF,CAAe,EACvCD,EAAK,MAAK,EAElB,CAAC"}